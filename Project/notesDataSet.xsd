<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="notesDataSet" targetNamespace="http://tempuri.org/notesDataSet.xsd" xmlns:mstns="http://tempuri.org/notesDataSet.xsd" xmlns="http://tempuri.org/notesDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="notesConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="notesConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.Project.Properties.Settings.GlobalReference.Default.notesConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="notesTableAdapter" GeneratorDataComponentClassName="notesTableAdapter" Name="notes" UserDataComponentName="notesTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="notesConnectionString (Settings)" DbObjectName="notes.dbo.notes" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [notes] WHERE (([noteID] = @Original_noteID) AND ([userID] = @Original_userID) AND ([noteTitle] = @Original_noteTitle))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_noteID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="noteID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_userID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="userID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_noteTitle" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="noteTitle" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [notes] ([userID], [notes], [noteTitle]) VALUES (@userID, @notes, @noteTitle);
SELECT noteID, userID, notes, noteTitle FROM notes WHERE (noteID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@userID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="userID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@notes" Precision="0" ProviderType="Text" Scale="0" Size="0" SourceColumn="notes" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@noteTitle" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="noteTitle" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT noteID, userID, notes, noteTitle FROM notes</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [notes] SET [userID] = @userID, [notes] = @notes, [noteTitle] = @noteTitle WHERE (([noteID] = @Original_noteID) AND ([userID] = @Original_userID) AND ([noteTitle] = @Original_noteTitle));
SELECT noteID, userID, notes, noteTitle FROM notes WHERE (noteID = @noteID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@userID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="userID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@notes" Precision="0" ProviderType="Text" Scale="0" Size="0" SourceColumn="notes" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@noteTitle" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="noteTitle" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_noteID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="noteID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_userID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="userID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_noteTitle" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="noteTitle" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="noteID" ColumnName="noteID" DataSourceName="notes.dbo.notes" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@noteID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="noteID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="noteID" DataSetColumn="noteID" />
              <Mapping SourceColumn="userID" DataSetColumn="userID" />
              <Mapping SourceColumn="notes" DataSetColumn="notes" />
              <Mapping SourceColumn="noteTitle" DataSetColumn="noteTitle" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="userInfoTableAdapter" GeneratorDataComponentClassName="userInfoTableAdapter" Name="userInfo" UserDataComponentName="userInfoTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="notesConnectionString (Settings)" DbObjectName="notes.dbo.userInfo" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[userInfo] WHERE (([userID] = @Original_userID) AND ([userName] = @Original_userName) AND ([email] = @Original_email) AND ([password] = @Original_password))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_userID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="userID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_userName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="userName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_email" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="email" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_password" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="password" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[userInfo] ([userName], [email], [password]) VALUES (@userName, @email, @password);
SELECT userID, userName, email, password FROM userInfo WHERE (userID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@userName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="userName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@email" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="email" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@password" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="password" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT userID, userName, email, password FROM dbo.userInfo</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[userInfo] SET [userName] = @userName, [email] = @email, [password] = @password WHERE (([userID] = @Original_userID) AND ([userName] = @Original_userName) AND ([email] = @Original_email) AND ([password] = @Original_password));
SELECT userID, userName, email, password FROM userInfo WHERE (userID = @userID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@userName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="userName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@email" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="email" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@password" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="password" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_userID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="userID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_userName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="userName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_email" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="email" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_password" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="password" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="userID" ColumnName="userID" DataSourceName="notes.dbo.userInfo" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@userID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="userID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="userID" DataSetColumn="userID" />
              <Mapping SourceColumn="userName" DataSetColumn="userName" />
              <Mapping SourceColumn="email" DataSetColumn="email" />
              <Mapping SourceColumn="password" DataSetColumn="password" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="notesDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:Generator_UserDSName="notesDataSet" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="notesDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="notes" msprop:Generator_RowEvHandlerName="notesRowChangeEventHandler" msprop:Generator_RowDeletedName="notesRowDeleted" msprop:Generator_RowDeletingName="notesRowDeleting" msprop:Generator_RowEvArgName="notesRowChangeEvent" msprop:Generator_TablePropName="notes" msprop:Generator_RowChangedName="notesRowChanged" msprop:Generator_UserTableName="notes" msprop:Generator_RowChangingName="notesRowChanging" msprop:Generator_RowClassName="notesRow" msprop:Generator_TableClassName="notesDataTable" msprop:Generator_TableVarName="tablenotes">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="noteID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInTable="noteIDColumn" msprop:Generator_ColumnPropNameInRow="noteID" msprop:Generator_UserColumnName="noteID" msprop:Generator_ColumnVarNameInTable="columnnoteID" type="xs:int" />
              <xs:element name="userID" msprop:Generator_ColumnPropNameInTable="userIDColumn" msprop:Generator_ColumnPropNameInRow="userID" msprop:Generator_UserColumnName="userID" msprop:Generator_ColumnVarNameInTable="columnuserID" type="xs:int" />
              <xs:element name="notes" msprop:Generator_ColumnPropNameInTable="notesColumn" msprop:Generator_ColumnPropNameInRow="notes" msprop:Generator_UserColumnName="notes" msprop:Generator_ColumnVarNameInTable="columnnotes">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="noteTitle" msprop:Generator_UserColumnName="noteTitle" msprop:Generator_ColumnPropNameInTable="noteTitleColumn" msprop:Generator_ColumnPropNameInRow="noteTitle" msprop:Generator_ColumnVarNameInTable="columnnoteTitle">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="userInfo" msprop:Generator_RowEvHandlerName="userInfoRowChangeEventHandler" msprop:Generator_RowDeletedName="userInfoRowDeleted" msprop:Generator_RowDeletingName="userInfoRowDeleting" msprop:Generator_RowEvArgName="userInfoRowChangeEvent" msprop:Generator_TablePropName="userInfo" msprop:Generator_RowChangedName="userInfoRowChanged" msprop:Generator_UserTableName="userInfo" msprop:Generator_RowChangingName="userInfoRowChanging" msprop:Generator_RowClassName="userInfoRow" msprop:Generator_TableClassName="userInfoDataTable" msprop:Generator_TableVarName="tableuserInfo">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="userID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInTable="userIDColumn" msprop:Generator_ColumnPropNameInRow="userID" msprop:Generator_UserColumnName="userID" msprop:Generator_ColumnVarNameInTable="columnuserID" type="xs:int" />
              <xs:element name="userName" msprop:Generator_ColumnPropNameInTable="userNameColumn" msprop:Generator_ColumnPropNameInRow="userName" msprop:Generator_UserColumnName="userName" msprop:Generator_ColumnVarNameInTable="columnuserName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="email" msprop:Generator_ColumnPropNameInTable="emailColumn" msprop:Generator_ColumnPropNameInRow="email" msprop:Generator_UserColumnName="email" msprop:Generator_ColumnVarNameInTable="columnemail">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="25" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="password" msprop:Generator_ColumnPropNameInTable="passwordColumn" msprop:Generator_ColumnPropNameInRow="password" msprop:Generator_UserColumnName="password" msprop:Generator_ColumnVarNameInTable="columnpassword">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="130" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:notes" />
      <xs:field xpath="mstns:noteID" />
    </xs:unique>
    <xs:unique name="userInfo_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:userInfo" />
      <xs:field xpath="mstns:userID" />
    </xs:unique>
  </xs:element>
  <xs:annotation>
    <xs:appinfo>
      <msdata:Relationship name="FK_notes_userInfo" msdata:parent="userInfo" msdata:child="notes" msdata:parentkey="userID" msdata:childkey="userID" msprop:Generator_UserParentTable="userInfo" msprop:Generator_UserChildTable="notes" msprop:Generator_RelationVarName="relationFK_notes_userInfo" msprop:Generator_ChildPropName="GetnotesRows" msprop:Generator_ParentPropName="userInfoRow" msprop:Generator_UserRelationName="FK_notes_userInfo" />
    </xs:appinfo>
  </xs:annotation>
</xs:schema>